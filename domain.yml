version: "3.1"

intents:
  - greetings
  - goodbye
  - affirm
  - deny
  - out_of_scope
  - ask_movie_question
  - ask_recommendation_without_movie
  - ask_recommendation_with_movie
  - ask_movie_with_similar_plot
  - movie_genre
  - movie_director
  - movie_composer
  - movie_cast
  - movie_plot
  - movie_release_date
  - movie_budget
  - movie_runtime
  - movie_revenue
  - movie_rating
  - movie_distributor
  - movie_producer
  - movie_genre+movie_producer
  - just_genre
  - just_cast
  - just_rating
  - just_year
  - is_before
  - is_after
  - is_exactly

entities:
  - movie_name
  - genre
  - person_name
  - composer_name
  - director_name
  - producer_name
  - cast
  - distributor
  - release_date
  - budget
  - runtime
  - revenue
  - rating
  - number_of_actors
  - movie_period
  - runtime_time_period #tells me if the lenght is longer or shorter than the one specified
  
slots:
  movie_name:
    type: text
    mappings:
      - type: from_entity
        entity: movie_name
  genre:
    type: list
    mappings:
      - type: from_entity
        entity: genre
  release_date:
    type: text
    mappings:
      - type: from_entity
        entity: release_date
  budget:
    type: float
    mappings:
      - type: from_entity
        entity: budget
  runtime:
    type: float
    mappings:
      - type: from_entity
        entity: runtime
  revenue:
    type: float
    mappings:
      - type: from_entity
        entity: revenue
  plot:
    type: text
    mappings:
      - type: custom
  rating:
    type: any
    mappings:
      - type: from_entity
        entity: rating
  person_name:
    type: text
    mappings:
      - type: from_entity
        entity: person_name
  composer_name:
    type: list
    mappings:
      - type: from_entity
        entity: composer_name
  director_name:
    type: list
    mappings:
      - type: from_entity
        entity: cast
  producer_name:
    type: list
    mappings:
      - type: from_entity
        entity: producer_name
  number_of_actors:
    type: any
    mappings:
      - type: from_entity
        entity: number_of_actors
  cast:
    type: list
    mappings:
      - type: from_entity
        entity: cast
  keep_asking:
    type: bool
    mappings:
    - type: from_intent
      value: true
      intent: affirm
    - type: from_intent
      value: false
      intent: deny
  is_already_watched:
    type: bool
    mappings:
    - type: custom
      value: true
      intent: affirm
  index_already_watched:
    type: float
    mappings:
      - type: custom
  copy_of_movie_name:
    type: text
    mappings:
      - type: custom
  is_before:
    type: text
    mappings:
      - type: from_text
        intent: is_before
        conditions: 
          - active_loop: retrieve_movie_information_form
  is_after:
    type: text
    mappings:
      - type: from_text
        intent: is_after
        conditions: 
          - active_loop: retrieve_movie_information_form
  is_exactly:
    type: text
    mappings:
      - type: from_text
        intent: is_exactly
        conditions: 
          - active_loop: retrieve_movie_information_form
  movie_period: # dummy slot
    type: text
    influence_conversation: false
    mappings:
      - type: from_entity
        entity: movie_period
        conditions: 
          - active_loop: retrieve_movie_information_form
  runtime_time_period:
    type: text
    mappings:
      - type: from_entity
        entity: runtime_time_period
  is_title_received:
    type: bool
    mappings:
    - type: custom
      value: true #diventa true quando vado in task 1, devo metterlo in false quando va in task 2
      intent: ask_movie_question
  is_plot_received:
    type: text
    influence_conversation: false
    mappings:
      - type: from_text
        conditions:
        - active_loop: retrieve_plot_form
  enable_genre:
    type: bool
    mappings:
    - type: from_intent
      value: true
      intent: affirm
    - type: from_intent
      value: false
      intent: deny
  enable_cast:
    type: bool
    mappings:
    - type: from_intent
      value: true
      intent: affirm
    - type: from_intent
      value: false
      intent: deny
  enable_rating:
    type: bool
    mappings:
    - type: from_intent
      value: true
      intent: affirm
    - type: from_intent
      value: false
      intent: deny
  enable_release_date:
    type: bool
    mappings:
    - type: from_intent
      value: true
      intent: affirm
    - type: from_intent
      value: false
      intent: deny
  wiki_link:
    type: text
    mappings:
      - type: custom
  

responses:
  utter_greet:
  - text: "Hello! I'm Amadeus, your movie assistant. It's great to meet you!"
  - text: "Nice to meet you! I'm Amadeus, your movie assistant!"
  - text: "Greetings! Your movie assistant, Amadeus, at your service."
  - text: "Amadeus here, delighted to meet you and ready to assist you with anything related to movies!"

  utter_goodbye:
  - text: "It was great chatting with you. Feel free to come back anytime if you have more questions or just want to chat about movies. Have a great day!"
  - text: "It was wonderful talking to you! If you ever have more movie-related questions or just want to chat, feel free to come back anytime. Have a great day and take care!"
  - text: "Thank you for chatting with me! If you need any more movie recommendations or just want to talk, don't hesitate to come back. Wishing you a great day ahead!"
  - text: "I had a lovely time chatting with you! Please feel free to return if you have further questions or simply want to discuss movies. Have a fantastic day!"

  utter_self_introduction:
  - text: "I'm here to be your ultimate guide to the world of cinema. Whether you're a die-hard film buff or just looking for a casual movie night suggestion, I'm here to assist you with all your movie-related needs. From classic blockbusters to indie gems, I've got recommendations to suit every taste. So let's dive in and explore the wonderful world of movies together!"
  - text: "Looking for a cinematic adventure? Look no further! I'm your ultimate guide to the world of movies, catering to both die-hard film buffs and casual viewers alike. Whether you're in the mood for a classic blockbuster or a hidden indie gem, I have recommendations to satisfy every palate. Let's embark on this cinematic journey together!"
  - text: "Welcome to the world of movies! As your personal guide, I'm here to assist you with all your movie-related needs, no matter how big or small. From beloved blockbusters to overlooked indie treasures, I have recommendations that will pique your interest. Join me as we explore the fascinating world of cinema together!"
  - text: "Are you ready to discover the magic of movies? Look no further! I'm here to be your ultimate guide, offering recommendations that cater to every movie lover's taste. Whether you're a seasoned film buff or just looking for a fun movie night suggestion, I'm here to help. So let's dive in and explore the wonderful world of cinema together!"

  utter_decision:
  - text: "What would you like to know?"
  - text: "Is there anything specific you're interested in learning about movies?"    
  - text: "How can I assist you in expanding your knowledge of movies?"
  - text: "Are there any particular aspects of movies you'd like to delve into?"

  utter_keep_asking:
  # - condition:
  #   - type: slot
  #     name: movie_name
  #     value: None
  - text: "Do you want to know something else about {movie_name} or other films?"
  - text: "Are there any other questions you have about {movie_name} or other movies?"
  - text: "Is there anything else you'd like to know about {movie_name} or other films?"
  - text: "Would you like me to provide additional information about {movie_name} or other movies?"

  utter_out_of_scope:
  - text: "I'm sorry, but that question is out of my scope as a movie assistant. My purpose is to help you with anything related to movies, such as providing recommendations, movie reviews, trivia, and other related information. If you have any movie-related questions, I'd be happy to help you out!"
  - text: "I'm afraid I cannot answer your question since it's beyond the scope of my expertise as a movie assistant. My primary goal is to assist you with anything related to movies, including recommendations, reviews, trivia, and other movie-related information. If you have any movie-related queries, I'd be more than happy to help you out!"
  - text: "Unfortunately, I am not equipped to answer that question as a movie assistant. My role is to provide assistance with all things movie-related, such as offering recommendations, reviews, and trivia, among other things. If you have any questions about movies, I'm here to help you in any way I can."
  - text: "I apologize, but answering that question is not within my purview as a movie assistant. My primary objective is to aid you with anything related to movies, whether that be by providing recommendations, reviews, or trivia. If you have any questions about movies, I'm at your service!"

  utter_return_movie_name:
  - text: "Sure! The name of the movie is {movie_name}"
  - text: "Absolutely! The movie you're referring to is called {movie_name}."
  - text: "Of course! The name of the movie you're asking about is {movie_name}."
  - text: "Certainly! {movie_name} is the title of the film you're inquiring about."
  - text: "The movie you're talking about is named {movie_name}."
  - text: "You got it! The name of the movie is {movie_name}."

  utter_return_movie_genre:
  - text: "The genre of {movie_name} is {genre}"

  utter_return_movie_release_date:
  - text: "The release date of the movie {movie_name} is {release_date}."
  - text: "Sure! {movie_name} premiered on {release_date}."
  - text: "Of course! {movie_name} made its debut on {release_date}."
  - text: "{movie_name} was first shown to audiences on {release_date}."

  utter_return_movie_budget:
  - text: "The total budget for {movie_name} is {budget}"

  utter_return_movie_runtime:
  - text: "The {movie_name} lasts {runtime}"

  utter_return_movie_revenue:
  - text: "The revenue of {movie_name} amounts to {revenue}"

  utter_return_movie_plot:
  - text: "The plot of {movie_name} is the following: {plot}"

  utter_return_movie_rating:
  - text: "The rating of {movie_name} is {rating}"

  utter_return_movie_director:
  - text: "The director of {movie_name} is {director_name}"

  utter_return_movie_producer:
  - text: "The producer of {movie_name} is {producer_name}"

  utter_return_movie_composer:
  - text: "The composer of {movie_name} is {composer_name}"

  utter_return_movie_cast:
  - text: "Here is the list of {number_of_actors} actors: {cast}"

  utter_finished_information:
  - text: "You asked all the information I know about {movie_name}"

  utter_return_recommended_movie:
  - text: "I recommend you the movie {movie_name} released on {release_date}. The plot is the following: {plot}"

  utter_ask_is_already_watched:
  - text: "Have you already watched this movie?"

  utter_ask_enable_genre:
  - text: "Do you want to specify a certain genre?"

  utter_ask_genre:
  - text: "What kind of genre would you like?"

  utter_ask_enable_cast:
  - text: "Do you want to specify a particular actor or actress?"

  utter_ask_cast:
  - text: "Would you like a certain actor to be in the movie?"

  utter_ask_director_name:
  - text: "Would you like a certain director for the movie?"

  utter_ask_enable_rating:
  - text: "Would you like the movie to have a specific rating?"

  utter_ask_rating:
  - text: "What is the minimum rating that you want for the movie?"

  utter_ask_enable_release_date:
  - text: "Would you like to specify a release date for the movie?"

  utter_ask_release_date:
  - text: "Can you tell me a release date for the movie?"

  utter_ask_movie_period:
  - text: "Would you like it to be before, after or exactly the year {release_date}?"
    
  utter_ask_runtime_time_period:
  - text: "Would you like it to be longer or shorter with respect to the runtime {runtime}?"
    buttons:
    - title: "Shorter"
      payload: "/runtime_time_period"
    - title: "Longer"
      payload: "/runtime_time_period"

  utter_ask_is_plot_received:
  - text: "Can you describe the plot, please?"

  utter_return_similar_movie:
  - text: "The request that has the closest resemblance to yours is {movie_name} directed by {director_name}. The plot is the following: {plot}. For more information check the link: {wiki_link}"

  utter_user_praise:
  - text: "Thanks for using this tool!"

  utter_ask_to_continue:
  - text: "Would you like to do something else?"

  utter_still_to_implement:
  - text: "Still to implement!"

  utter_prova:
  - text: "Sono nel posto giusto"

actions:
  - utter_greet
  - utter_goodbye
  - utter_self_introduction
  - utter_return_movie_genre
  - utter_return_movie_composer
  - utter_return_movie_release_date
  - utter_return_movie_budget
  - utter_return_movie_runtime
  - utter_return_movie_revenue
  - utter_return_movie_plot
  - utter_return_movie_rating
  - utter_return_movie_director
  - utter_out_of_scope
  - utter_prova
  - action_retrieve_genre
  - action_showlist
  - action_retrieve_director
  - action_retrieve_release_date
  - action_retrieve_budget
  - action_retrieve_runtime
  - action_retrieve_revenue
  - action_retrieve_plot
  - action_retrieve_rating
  - action_retrieve_composer
  - action_retrieve_producer
  - action_retrieve_cast
  - action_recommendation_with_movie
  - action_recommendation_without_movie
  - action_reset_slots
  - action_obtain_movie_from_plot
  #- validate_retrieve_movie_information_form

forms:
  already_watched_form:
    required_slots:
      - is_already_watched
  retrieve_movie_information_form:
    required_slots:
      #- enable_genre
      #- genre
      #- enable_rating
      #- rating
      #- enable_cast
      - cast
      #- enable_release_date
      #- release_date
      #- movie_period
      - director_name
  retrieve_plot_form:
    required_slots:
      - is_plot_received
  
session_config:
  session_expiration_time: 60
  carry_over_slots_to_new_session: true
